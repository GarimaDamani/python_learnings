import unittest
import uuid
from Customerrating import CustomerTicketRating

class MyTestCase(unittest.TestCase):
    def setUp(self):
        self.customer_ticket = CustomerTicketRating()
        self.ticket_id1 = self.customer_ticket.create_ticket()
        self.ticket_id2 = self.customer_ticket.create_ticket()
        self.ticket_id3 = self.customer_ticket.create_ticket()
        self.ticket_id4 = self.customer_ticket.create_ticket()
        self.ticket_id5 = self.customer_ticket.create_ticket()
        self.ticket_id6 = self.customer_ticket.create_ticket()

    def test_invalid_ticket(self):
        self.assertFalse(self.customer_ticket.rate_ticket(rating=2, ticket_id=uuid.uuid4()))
        self.assertFalse(self.customer_ticket.rate_ticket(rating=2, ticket_id=-1))
        self.assertFalse(self.customer_ticket.rate_ticket(rating=2, ticket_id="  "))

    def test_invalid_rating(self):
        self.assertFalse(self.customer_ticket.rate_ticket(rating=0, ticket_id=self.ticket_id1))
        self.assertFalse(self.customer_ticket.rate_ticket(rating=-3, ticket_id=self.ticket_id1))
        self.assertFalse(self.customer_ticket.rate_ticket(rating="", ticket_id=self.ticket_id1))
        self.assertFalse(self.customer_ticket.rate_ticket(rating="   ", ticket_id=self.ticket_id1))
        self.assertFalse(self.customer_ticket.rate_ticket(rating=1.5, ticket_id=self.ticket_id1))

    def test_valid_ticket_rating(self):
        self.assertTrue(self.customer_ticket.rate_ticket(rating=1, ticket_id=self.ticket_id1))
        self.assertTrue(self.customer_ticket.rate_ticket(rating=5, ticket_id=self.ticket_id1))

    def test_top_tickets(self):
        self.assertTrue(self.customer_ticket.rate_ticket(rating=1, ticket_id=self.ticket_id1))
        self.assertTrue(self.customer_ticket.rate_ticket(rating=3, ticket_id=self.ticket_id3))
        self.assertTrue(self.customer_ticket.rate_ticket(rating=2, ticket_id=self.ticket_id5))
        self.assertTrue(self.customer_ticket.rate_ticket(rating=4, ticket_id=self.ticket_id4))
        self.assertTrue(self.customer_ticket.rate_ticket(rating=1, ticket_id=self.ticket_id1))
        self.assertTrue(self.customer_ticket.rate_ticket(rating=4, ticket_id=self.ticket_id3))
        self.assertTrue(self.customer_ticket.rate_ticket(rating=2, ticket_id=self.ticket_id5))
        self.assertTrue(self.customer_ticket.rate_ticket(rating=3, ticket_id=self.ticket_id3))
        self.assertTrue(self.customer_ticket.rate_ticket(rating=5, ticket_id=self.ticket_id4))
        self.assertTrue(self.customer_ticket.rate_ticket(rating=5, ticket_id=self.ticket_id2))
        self.assertTrue(self.customer_ticket.rate_ticket(rating=4, ticket_id=self.ticket_id3))
        self.assertTrue(self.customer_ticket.rate_ticket(rating=4, ticket_id=self.ticket_id4))

        top_tickets, _ = self.customer_ticket.get_n_tickets(2)
        ticket_id, (rating_sum, count, avg_rating) = top_tickets[0]
        self.assertEqual(ticket_id, self.ticket_id2)
        self.assertEqual(count, 1)

        _, bottom_tickets = self.customer_ticket.get_n_tickets(7)
        ticket_id, (rating_sum, count, avg_rating) = bottom_tickets[1]
        self.assertEqual(ticket_id, self.ticket_id1)
        self.assertEqual(count, 2)

        ticket_id, (rating_sum, count, avg_rating) = bottom_tickets[0]
        self.assertEqual(ticket_id, self.ticket_id6)
        self.assertEqual(count, 0)
        self.assertEqual(avg_rating, 0.0)

    def test_tickets_same_rating(self):
        self.assertTrue(self.customer_ticket.rate_ticket(rating=3, ticket_id=self.ticket_id1))
        self.assertTrue(self.customer_ticket.rate_ticket(rating=3, ticket_id=self.ticket_id2))
        self.assertTrue(self.customer_ticket.rate_ticket(rating=3, ticket_id=self.ticket_id3))

        top_tickets, _ = self.customer_ticket.get_n_tickets(3)
        ticket_id, (rating_sum, count, avg_rating) = top_tickets[0]
        self.assertEqual(avg_rating, 3.0)
        self.assertEqual(count, 1)

if __name__ == '__main__':
    unittest.main()
