class Node:
    def __init__(self, value):
        self.data = value
        self.prev = None
        self.next = None

class DoublyLinkedList:
    def __init__(self):
        self.head = None

    def append(self, value):
        new_node = Node(value)
        if not self.head:
            self.head = new_node
            return
        current = self.head
        while current.next:
            current = current.next
        current.next = new_node
        new_node.prev = current

    def prepend(self, value):
        new_node = Node(value)
        if not self.head:
            self.head = new_node
            return
        new_node.next = self.head
        self.head.prev = new_node
        self.head = new_node

    def display(self):
        if not self.head:
            print("List is empty")
            return
        current = self.head
        while current:
            print(current.data, end=" <-> ")
            current = current.next
        print("None")

    def display_backward(self):
        if not self.head:
            print("List is empty")
            return
        current = self.head
        while current.next:
            current = current.next
        while current:
            print(current.data, end=" <-> ")
            current = current.prev
        print("None")

    def delete(self, value):
        if not self.head:
            print("List is empty")
            return
        current = self.head
        while current and current.data != value:
            current = current.next
        if not current:
            print("Value not found")
            return
        if current.prev:
            current.prev.next = current.next
        if current.next:
            current.next.prev = current.prev
        if current == self.head:  # If head is deleted, update head
            self.head = current.next
        del current


dl = DoublyLinkedList()
dl.append(10)
dl.display()
dl.append(20)
dl.display()
dl.prepend(40)
dl.display()
dl.prepend(1)
dl.append(55)
dl.display()
dl.display_backward()
dl.delete(20)
dl.display()

"""
Output
10 <-> None
10 <-> 20 <-> None
40 <-> 10 <-> 20 <-> None
1 <-> 40 <-> 10 <-> 20 <-> 55 <-> None
55 <-> 20 <-> 10 <-> 40 <-> 1 <-> None
1 <-> 40 <-> 10 <-> 55 <-> None
"""
